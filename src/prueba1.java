/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Nestor Espa√±a
 */
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
public class prueba1 extends javax.swing.JFrame {

    /**
     * Creates new form prueba1
     */
    public prueba1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        Nc = new java.awt.TextField();
        Nom = new java.awt.TextField();
        Dom = new java.awt.TextField();
        button1 = new java.awt.Button();
        Res1 = new java.awt.Label();
        Res2 = new java.awt.Label();
        Res3 = new java.awt.Label();
        button2 = new java.awt.Button();
        button3 = new java.awt.Button();
        button4 = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label1.setText("NC");

        label2.setText("NOMBRE");

        label3.setText("DOMICILIO");

        button1.setLabel("ENVIAR");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        Res1.setText("label4");

        Res2.setText("label5");

        Res3.setText("label6");

        button2.setLabel("CONSULTAR");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        button3.setLabel("BORRAR");
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        button4.setLabel("ACTUALIZAR");
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Nom, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Dom, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Nc, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(19, 19, 19)
                        .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Res3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(Res1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Res2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Nc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Dom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(Res1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Res2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Res3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        Connection con=null;
        Statement stmt=null;
        
        // TODO add your handling code here:
        int numero;
        String Nombre,Domicilio;
        
        numero=Integer.parseInt(Nc.getText());
        Nombre=Nom.getText();
        Domicilio=Dom.getText();
        
        try{
            String url="jdbc:mysql://localhost:3306/Escuela";
            String usuario="root";
            String contrase√±a="root";
            try {
                Class.forName("com.mysql.jdbc.Driver").newInstance();
            } catch (InstantiationException | IllegalAccessException | ClassNotFoundException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            }
            con=DriverManager.getConnection(url,usuario,contrase√±a);
            if(con !=  null)
                System.out.println("se ha establecido conexion a la base de datos"+"\n"+url);
            
            stmt=con.createStatement();
            stmt.executeUpdate("insert into alumnos values ('"+numero+"','"+Nombre+"','"+Domicilio+"')");
            
            System.out.println("los valores han sido agregados a la base de datos"+"\n");
        }catch(SQLException e){
            e.printStackTrace();
        }
        finally{
        if (con != null){
            try{
              con.close();
              stmt.close();
            } catch (SQLException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        }

        
        Res1.setText(""+numero);
        Res2.setText(Nombre);
        Res3.setText(Domicilio);
        Nc.setText(" ");
        Nom.setText(" ");
        Dom.setText(" ");
    }//GEN-LAST:event_button1ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        // TODO add your handling code here:
        Connection con=null;
        Statement stmt=null;
        ResultSet rs=null;
         int numero;
        String Nombre,Domicilio;
        
        numero=Integer.parseInt(Nc.getText());
         try{
             String url="jdbc:mysql://localhost:3306/Escuela";
             String usuario="root";
             String contrase√±a="root";
              try {
                Class.forName("com.mysql.jdbc.Driver").newInstance();
            } catch (InstantiationException | IllegalAccessException | ClassNotFoundException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            }
            con=DriverManager.getConnection(url,usuario,contrase√±a);
            if(con !=  null)
                System.out.println("se ha establecido conexion a la base de datos"+"\n"+url);
            
            stmt=con.createStatement();
            rs=stmt.executeQuery("select * from alumnos where Nc='"+numero+"'");
          
           
            
            while(rs.next()){
                Nombre=rs.getString(2);
                Domicilio=rs.getString(3);
                Res1.setText(""+numero);
               Res2.setText(Nombre);
               Res3.setText(Domicilio);
        
        Nom.setText(Nombre);
        Dom.setText(Domicilio);
         }
            
            System.out.println("los valores han sido mostrados"+"\n");
        }catch(SQLException e){
            e.printStackTrace();
        }
        finally{
        if (con != null){
            try{
              con.close();
              stmt.close();
            } catch (SQLException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        }

        
        
        
         
    }//GEN-LAST:event_button2ActionPerformed

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
         Connection con=null;
        Statement stmt=null;
        int numero;
        
        
        numero=Integer.parseInt(Nc.getText());
        
        try{
            String url="jdbc:mysql://localhost:3306/Escuela";
            String usuario="root";
            String contrase√±a="root";
            try {
                Class.forName("com.mysql.jdbc.Driver").newInstance();
            } catch (InstantiationException | IllegalAccessException | ClassNotFoundException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            }
            con=DriverManager.getConnection(url,usuario,contrase√±a);
            if(con !=  null)
                System.out.println("se ha establecido conexion a la base de datos"+"\n"+url);
            
            stmt=con.createStatement();
            stmt.executeUpdate("delete from alumnos where Nc='"+numero+"'");
            
            System.out.println("el valor ha sido borrado"+"\n");
        }catch(SQLException e){
        }
        finally{
        if (con != null){
            try{
              con.close();
              stmt.close();
            } catch (SQLException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        }
        Nc.setText(" ");
        Nom.setText(" ");
        Dom.setText(" ");
        
    }//GEN-LAST:event_button3ActionPerformed

    private void button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button4ActionPerformed
       Connection con=null;
        Statement stmt=null;
     
        // TODO add your handling code here:
        int numero;
        String Nombre,Domicilio;
        
        numero=Integer.parseInt(Nc.getText());
        Nombre=Nom.getText();
        Domicilio=Dom.getText();
        try{
            String url="jdbc:mysql://localhost:3306/Escuela";
            String usuario="root";
            String contrase√±a="root";
            try {
                Class.forName("com.mysql.jdbc.Driver").newInstance();
            } catch (InstantiationException | IllegalAccessException | ClassNotFoundException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            }
            con=DriverManager.getConnection(url,usuario,contrase√±a);
            if(con !=  null)
                System.out.println("se ha establecido conexion a la base de datos"+"\n"+url);
            
            stmt=con.createStatement();
            stmt.executeUpdate("update alumnos set nombre='"+Nombre+"', domicilio='"+Domicilio+"' where Nc='"+numero+"'");
              Nc.setText("");
              Nom.setText(" ");
              Dom.setText(" ");
              Res1.setText(""+numero);
              Res2.setText(Nombre);
              Res3.setText(Domicilio);
            System.out.println("el valor ha sido actualizado"+"\n");
        }catch(SQLException e){
        }
        finally{
        if (con != null){
            try{
              con.close();
              stmt.close();
            } catch (SQLException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        }
      
    }//GEN-LAST:event_button4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(prueba1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(prueba1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(prueba1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(prueba1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new prueba1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.TextField Dom;
    private java.awt.TextField Nc;
    private java.awt.TextField Nom;
    private java.awt.Label Res1;
    private java.awt.Label Res2;
    private java.awt.Label Res3;
    private java.awt.Button button1;
    private java.awt.Button button2;
    private java.awt.Button button3;
    private java.awt.Button button4;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    // End of variables declaration//GEN-END:variables
}
